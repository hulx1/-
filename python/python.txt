运算符  
**表示乘方运算
//表示整除
/表示除
is:a is b 表示变量a与变量b的内存地址是否相同
逻辑这块再搞一搞



输入输出
a = int(input('a = '))#使用input()函数获取键盘输入(在input函数中用户输入的是字符串，以换行作为结束的标志，要进行类型转换)
b = int(input('b = '))
print('%d + %d = %d' % (a, b, a + b))#用占位符格式化输出的字符串
print("flag1 = ", flag1)

if语句结构
age = 20
if(age > 18):
    print("陈年老")（缩进4个空格，以空格来区分代码块）
else:
    print("年轻")



强制转换b = int(a)只能取整数而并不能四舍五入
int()：将一个数值或字符串转换成整数，可以指定进制。
float()：将一个字符串转换成浮点数。
str()：将指定的对象转换成字符串形式，可以指定编码。
chr()：将整数转换成该编码对应的字符串（一个字符）。
ord()：将字符串（一个字符）转换成对应的编码（整数）。



单行代码注释用“#”，多行使用“'''”或“"""”三个英文单引号或双引号作为注释的开始和结束符号

使用缩进来表示代码块

字符串（单引号双引号都可以）可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾，且执行后会换行）

str(age)强制转换成字符串类型
name="ada dgdfgdf"
print(name.title())#能够首字母大写的形式输出字符串内容#
print(name.upper())#得到全大写字符串#
print(name.lower())#得到全小写字符串#
print(name.swapcase())#大小写互换#
print(name.capitalize())#首字母大写其余小写#





拼接字符串用“+”号，在使用时不要忘记变量类型一定要一致
first_name="ada"
last_name="sdsfsd"
full_name=first_name+" "+last_name
print(full_name)



换行符“\n”
制表符tab“\t”

name.rstrip()暂时删除字符串末尾的空白（即再二次询问的时候依然有空白）
name.lstrip()暂时删除字符串开头的空白
name.strip()暂时删除字符串两端空白









列表
下标从0开始，可以用color[0]来直接访问数组成员，当下标为-1时返回最后一个列表元素
输出的时候可以使用字符串中的title等函数改变字符串类型的成员的格式（字母全大写等）

num = [1, 2, 3, 4, 5]
print(num)

weather = ["snow", "rain", "wind", "cloud", "sunny"]
print(weather)（注意一下如果元素是字符(String)的话，元素要加双引号）

在列表末尾添加一个新的元素  
列表名.append()
family = ["mom", "dad", "me", "beibei"]
family.append("miaomiao")

在列表中插入元素
列表名.insert(要添加到的位置，待添加的元素)
motorcycles = ['honda', 'yamaha', 'suzuki']
motorcycles.insert(1, 'ducati')
print(motorcycles)

在列表中删除一个元素
（1）删除指定内容的元素（如有多个指定值，则只删除第一个）
列表名.remove()
family = ["mom", "dad", "me", "beibei", "miaomiao"]
family.remove("me")
（2）删除指定位置的元素
motorcycles = ['honda', 'yamaha', 'suzuki']
del motorcycles[2]
print(motorcycles)
（3）返回并弹出末尾元素
motor = ['honda', 'yamaha', 'suzuki']
a=motor.pop()
print(a)
print(motor)
同时pop也可以删除列表中任何位置的元素，只需在括号中指定要删除的元素的索引即可。
a=motor.pop(0)就是删除索引为0的元素

排序

sort（永久的）
cars = ['bmw', 'audi', 'toyota', 'subaru']
cars.sort()
print(cars)

反向排序（永久的）
cars = ['bmw', 'audi', 'toyota', 'subaru']
cars.sort(reverse=True)
print(cars)

sorted(临时的)
cars = ['bmw', 'audi', 'toyota', 'subaru']
print("Here is the original list:")
print(cars)
print("\nHere is the sorted list:")
print(sorted(cars))
print("\nHere is the original list again:")
print(cars)

反向打印列表
列表名.reverse()
cars = ['bmw', 'audi', 'toyota', 'subaru']
print(cars)
cars.reverse()
print(cars)

列表长度
len(列表名)

在一个列表的元素中找到最大值、最小值和求和
max(列表名)
min(列表名)
sum(列表名)


遍历列表

ma = ['a', 'd', 'c','b','y']
for val in ma:
    print(val)

range(a,b)用于生成a―(b-1)的数字，不包括b

使用range()打印
for val in range(1,5):
    print(val)

使用range()创建数字列表
numbers = list(range(1,6))
print(numbers)

使用函数range() 时，还可指定步长。例如，下面的代码打印1~10内的偶数：
even_numbers = list(range(2,11,2))
print(even_numbers)
从2开始数，然后不断地加2，直到达到或超过终值


列表解析(使用列表解析比使用普通方法的速度几乎可以快1倍。因此推荐使用列表解析。)
L = [ i**2 for i in range(1,11)]
print(L)

L = [ i**2 for i in range(1,11) if i >= 4 ]
print(L)列出1~10中大于等于4的数字的平方

切片
列表名[a:b]截取索引a―(b-1)的元素输出，输出也是一个列表。a,b可省略，若省略则默认从头开始或到末尾
players = ['charles', 'martina', 'michael', 'florence', 'eli']
print(players[0:3])
遍历切片
for player in players[:3]:
    print(player)

复制列表
（1）b = a[:]
（2）b = list(a)
如果使用a=b这种方式复制列表，则a与b事实上指向同一个地址的列表，没有新建。使用内置函数copy的时候也会产生问题。




元组（而不可变的列表被称为元组，使用圆括号来标识）






奇奇怪怪的函数
type()#检查变量的类型

